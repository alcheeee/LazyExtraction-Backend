"""Added Items and sub-Tables

Revision ID: ff005f43f703
Revises: 306270cdec7c
Create Date: 2024-04-10 16:51:51.773616

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ff005f43f703'
down_revision: Union[str, None] = '306270cdec7c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('fooditems')
    op.drop_table('weapon')
    op.drop_index('ix_user_email', table_name='user')
    op.drop_index('ix_user_password', table_name='user')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    op.drop_table('jobs')
    op.drop_table('inventory')
    op.drop_table('industrialcrafting')
    op.drop_table('corporations')
    op.drop_table('blackmarket')
    op.drop_table('items')
    op.drop_table('stats')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stats',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('reputation', sa.INTEGER(), nullable=False),
    sa.Column('education', sa.VARCHAR(), nullable=False),
    sa.Column('level', sa.INTEGER(), nullable=False),
    sa.Column('max_energy', sa.INTEGER(), nullable=False),
    sa.Column('health', sa.INTEGER(), nullable=False),
    sa.Column('strength', sa.INTEGER(), nullable=False),
    sa.Column('knowledge', sa.INTEGER(), nullable=False),
    sa.Column('evasiveness', sa.INTEGER(), server_default=sa.text("'1'"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('item_name', sa.VARCHAR(), nullable=False),
    sa.Column('illegal', sa.BOOLEAN(), nullable=False),
    sa.Column('category', sa.VARCHAR(length=18), nullable=True),
    sa.Column('buy_price', sa.INTEGER(), nullable=True),
    sa.Column('item_type', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blackmarket',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('who_posted', sa.VARCHAR(), nullable=False),
    sa.Column('item_id', sa.INTEGER(), nullable=False),
    sa.Column('time_posted', sa.VARCHAR(), nullable=False),
    sa.Column('sell_price', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('corporations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('corporation_name', sa.VARCHAR(), nullable=False),
    sa.Column('corporation_type', sa.VARCHAR(), nullable=False),
    sa.Column('leader', sa.INTEGER(), nullable=False),
    sa.Column('capital', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.Column('reputation', sa.INTEGER(), server_default=sa.text("'0'"), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('industrialcrafting',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('item_one', sa.VARCHAR(), nullable=False),
    sa.Column('item_one_amount', sa.INTEGER(), nullable=False),
    sa.Column('item_two', sa.VARCHAR(), nullable=False),
    sa.Column('item_two_amount', sa.INTEGER(), nullable=False),
    sa.Column('item_three', sa.VARCHAR(), nullable=False),
    sa.Column('item_three_amount', sa.INTEGER(), nullable=False),
    sa.Column('item_produced', sa.VARCHAR(), nullable=False),
    sa.Column('item_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('cash', sa.INTEGER(), nullable=False),
    sa.Column('bank', sa.INTEGER(), nullable=False),
    sa.Column('energy', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('job_name', sa.VARCHAR(), nullable=False),
    sa.Column('job_type', sa.VARCHAR(), nullable=False),
    sa.Column('income', sa.INTEGER(), nullable=False),
    sa.Column('energy_required', sa.INTEGER(), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=False),
    sa.Column('required_stats', sa.VARCHAR(), nullable=False),
    sa.Column('stat_changes', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('job', sa.VARCHAR(), nullable=True),
    sa.Column('corp_id', sa.INTEGER(), nullable=True),
    sa.Column('stats_id', sa.INTEGER(), nullable=True),
    sa.Column('inv_id', sa.INTEGER(), nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['corp_id'], ['corporations.id'], ),
    sa.ForeignKeyConstraint(['inv_id'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['stats_id'], ['stats.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_username', 'user', ['username'], unique=False)
    op.create_index('ix_user_password', 'user', ['password'], unique=False)
    op.create_index('ix_user_email', 'user', ['email'], unique=False)
    op.create_table('weapon',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('damage', sa.INTEGER(), nullable=False),
    sa.Column('damage_bonus', sa.INTEGER(), nullable=True),
    sa.Column('evasiveness_bonus', sa.INTEGER(), nullable=True),
    sa.Column('strength_bonus', sa.INTEGER(), nullable=True),
    sa.Column('attachment_one', sa.VARCHAR(), nullable=True),
    sa.Column('attachment_two', sa.VARCHAR(), nullable=True),
    sa.Column('item_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fooditems',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('health_bonus', sa.INTEGER(), nullable=False),
    sa.Column('item_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
