services:
  redis:
    image: redis:latest
    hostname: redis-cache
    container_name: redis-cache
    command: redis-server
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - cache:/data
    networks:
      - app_network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  api_server:
    hostname: api_server
    build: ./backend
    restart: always
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      FASTAPI_HOST: ${FASTAPI_HOST}
      FASTAPI_PORT: ${FASTAPI_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      DOCKER_HOST: unix:///var/run/docker.sock
      TESTCONTAINERS_HOST_OVERRIDE: host.docker.internal
      TESTCONTAINERS_RYUK_DISABLED: "true"
    entrypoint: ["/app/entrypoint.sh"]
    networks:
      - app_network

volumes:
  cache:
    driver: local
  postgres_data:

networks:
  app_network:
    external: true